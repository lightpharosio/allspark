---

- name: Configuration directory
  file:
    state: directory
    path: "{{ allspark_root_directory }}/config/jenkins/home"

- name: Register admin user
  shell: "cat {{ allspark_root_directory}}/data/secrets/admin_user.txt"
  register: allspark_jenkins_user
  changed_when: false
  tags:
  - skip_ansible_lint

- name: Register admin password
  shell: "cat {{ allspark_root_directory}}/data/secrets/admin_password.txt"
  register: allspark_jenkins_password
  changed_when: false
  tags:
  - skip_ansible_lint

#- name: Creating Jenkins volume
#  docker_volume:
#    name: "allspark_{{ item }}"
#  with_items:
#    - jenkins_home
#    - jenkins_plugins

- name: Copy Groovy Init Scripts
  copy:
    src: files/
    dest: "{{ allspark_root_directory }}/config/jenkins/"
    
- name: Register docker group UID
  getent:
    database: group
    key: docker

- name: Jenkins master
  docker_container:
    name: jenkins
    image: "{{ downloads.jenkins.image }}:{{ downloads.jenkins.tag }}"
    state: "{{ allspark_jenkins.enabled and 'started' or 'absent'}}"
    purge_networks: true
    networks:
      - name: allspark
    env:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    volumes: >-
      [
        #"allspark_jenkins_home:/var/jenkins_home",
        "{{ allspark_root_directory }}/config/jenkins/master.groovy.d:/usr/share/jenkins/ref/init.groovy.d",
        #"allspark_jenkins_plugins:/usr/share/jenkins/ref/plugins",
        "{{ allspark_root_directory }}/config/jenkins/home:/var/jenkins_home",
        "{{ allspark_root_directory}}/data/secrets/admin_password.txt:/run/secrets/jenkins-pass",
        "{{ allspark_root_directory}}/data/secrets/admin_user.txt:/run/secrets/jenkins-user"
      ]
    labels:
      "heritage": "allspark"
    restart_policy: always

- name: Copy configuration
  copy:
    src: templates/config.xml.j2
    dest: "{{ allspark_root_directory }}/config/jenkins/home"
  notify:
    - restart_jenkins

